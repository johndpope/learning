// ***************************************************************************
// Copyright (c) 2009, 3P Vantage, Inc., All Rights Reserved.
//
// This code is the exclusive property of 3P Vantage, Inc. It may ONLY be
// used by students during 3P Vantage's courses or by individuals
// who are being coached by 3P Vantage on a project.
//
// This code may NOT be copied or used for any other purpose without the prior
// written consent of 3P Vantage, Inc.
// ****************************************************************************

package com.ppp.labelmaker;


import java.util.Arrays;

import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;

public class DiscTest {

	private Disc disc;

	@Before
	public void setUp() {
		disc = new Disc();
	}

	@Test
	public void allTextsFit() {
		String[] expected = new String[] {
				"Valentine's Party",
				"14 Feb 2009 20:00",
				"Duration 20:39"
		};
		String[] label = disc.makeLabel(new LabelInfo("Valentine's Party", null, 
				DateUtil.createDate(2009, 2, 14, 20, 0), 20, 39, -1, -1));
		Assert.assertArrayEquals(expected, label);

	}

	@Test
	public void tooLongTitleIsTruncated() {
		String expectedTitle = "Valentine's Party Tr";
		String[] label = disc.makeLabel(new LabelInfo("Valentine's Party Truncated", null, 
				DateUtil.createDate(2009, 2, 14, 20, 0), 80, 39, -1, -1));
		System.out.println(Arrays.toString(label));
		Assert.assertEquals(expectedTitle, label[0]);
		
	}

	@Test
	public void singleDigitDurationTimesAreRenderedAsTwoDigits() {
		String[] label = disc.makeLabel(new LabelInfo("title", null, 
				DateUtil.createDate(2009, 2, 14, 20, 0), 2, 3, -1, -1));
		String expectedTimes = "Duration 02:03";
		Assert.assertEquals(expectedTimes, label[2]);
	}

	@Test
	public void sixtyMinutesAndOverAreRenderedAsHoursWithNoLeadingZero() {
		String[] label = disc.makeLabel(new LabelInfo("title", null, 
				DateUtil.createDate(2009, 2, 14, 20, 0), 333, 13, -1, -1));
		String expectedTimes = "Duration 5:33:13";
		Assert.assertEquals(expectedTimes, label[2]);
	}
}
